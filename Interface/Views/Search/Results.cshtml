@model Shared.DTOs.SearchResultDto

@{
    ViewData["Title"] = "Search results";
}


<div>

    @{ await Html.RenderPartialAsync("_InputSearchPartial", ViewData["SearchedContent"]); }

</div>

<div class="container body-content">

    <h2>Search results for @Model.SearchMetadata.SearchedContent</h2>

    <div> Found @Model.SearchMetadata.Total results in @Model.SearchMetadata.Took ms</div>

    @foreach (var result in Model.Hits)
    {
        <div class="result-card p-2">

            <div class="row">

                <div class="col-md-6">
                    <h5 class="overflowed-text">
                        @Html.DisplayFor(modelItem => result.Title)
                    </h5>
                </div>

            </div>

            <div class="row">

                <div class="col-md-12">
                    <div class="overflowed-text">
                        @Html.DisplayFor(modelItem => result.DescriptionMeta)
                    </div>
                </div>

            </div>

            <div class="row mb-3">

                <div class="col-md-10">
                    <a href="@result.Url">
                        <div class="overflowed-text">
                            @result.Url
                        </div>
                    </a>
                </div>

                <div class="col-md-2">
                    @* @Html.DisplayFor(modelItem => result.Source.CreateDate) *@
                </div>

            </div>
            @if (result.Highlights.Count > 0)
            {
                @foreach (var highlight in result.Highlights)
                {

                    <div class="col-md-12">

                        @Html.Raw(highlight)

                    </div>

                }
            }

        </div>
    }

    <nav aria-label="Navigate through search results">
        <ul class="pagination justify-content-center">

            <li class="page-item @(@Model.Pagination.Page == 1 ? "disabled" : "")">
                @Html.ActionLink("Previous", "Results",
                         new {searchedContent = Model.SearchMetadata.SearchedContent, Take = 10, Page = Model.Pagination.Page - 1}, new {@class = "page-link"})
            </li>

            @if (Model.Pagination.Page > 1)
            {
                <li class="page-item">
                    @Html.ActionLink((Model.Pagination.Page - 1).ToString(), "Results",
                        new {searchedContent = Model.SearchMetadata.SearchedContent, Take = 10, Page = Model.Pagination.Page - 1}, new {@class = "page-link"})
                </li>
            }

            <li class="page-item active">
                @Html.ActionLink(Model.Pagination.Page.ToString(), "Results",
                         new {searchedContent = Model.SearchMetadata.SearchedContent, Take = 10, Page = Model.Pagination.Page}, new {@class = "page-link"})
            </li>

            <li class="page-item">
                @Html.ActionLink((Model.Pagination.Page + 1).ToString(), "Results",
                    new {searchedContent = Model.SearchMetadata.SearchedContent, Take = 10, Page = Model.Pagination.Page + 1}, new {@class = "page-link"})
            </li>

            @if (Model.Pagination.Page == 1)
            {
                <li class="page-item">
                    @Html.ActionLink((Model.Pagination.Page + 2).ToString(), "Results",
                        new {searchedContent = Model.SearchMetadata.SearchedContent, Take = 10, Page = Model.Pagination.Page + 2}, new {@class = "page-link"})
                </li>
            }

            <li class="page-item">
                @Html.ActionLink("Next", "Results",
                         new {searchedContent = Model.SearchMetadata.SearchedContent, Take = 10, Page = Model.Pagination.Page + 1}, new {@class = "page-link"})
            </li>
        </ul>
    </nav>

</div>